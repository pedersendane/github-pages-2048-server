{
  "{\"sourceRoot\":\"/Users/dane/Documents/projects/react/2048-server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/dane/Documents/projects/react/2048-server\",\"filename\":\"/Users/dane/Documents/projects/react/2048-server/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/dane/Documents/projects/react/2048-server\",\"plugins\":[],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/dane/Documents/projects/react/2048-server",
      "filename": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/dane/Documents/projects/react/2048-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport uuid from 'uuid';\nvar highScore = [{\n  id: 'ae06181d-92c2-4fed-a29d-fb53a6301eb9',\n  score: '15',\n  isHighScore: false\n}];\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors()); // The route for getting a list of all todos\n\napp.get('/high-score', (req, res) => {\n  res.status(200).json(highScore);\n}); // The route for creating new todo-list items\n\napp.post('/new-high-score', (req, res) => {\n  const {\n    score\n  } = req.body;\n\n  if (score) {\n    const newScore = {\n      id: uuid(),\n      isHighScore: false,\n      score\n    };\n    highScore.push(newScore);\n    res.status(200).json(newScore);\n  } else {\n    res.status(400).json({\n      message: 'Request body should have a text property, and a name property'\n    });\n  }\n});\napp.listen(8000, () => console.log(\"Server listening on port 8000\"));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiY29ycyIsImJvZHlQYXJzZXIiLCJ1dWlkIiwiaGlnaFNjb3JlIiwiaWQiLCJzY29yZSIsImlzSGlnaFNjb3JlIiwiYXBwIiwidXNlIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInBvc3QiLCJib2R5IiwibmV3U2NvcmUiLCJwdXNoIiwibWVzc2FnZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLE1BQWpCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUNBLE9BQU9DLElBQVAsTUFBaUIsTUFBakI7QUFFQSxJQUFJQyxTQUFTLEdBQUcsQ0FBQztBQUNiQyxFQUFBQSxFQUFFLEVBQUUsc0NBRFM7QUFFYkMsRUFBQUEsS0FBSyxFQUFFLElBRk07QUFHYkMsRUFBQUEsV0FBVyxFQUFFO0FBSEEsQ0FBRCxDQUFoQjtBQU9BLE1BQU1DLEdBQUcsR0FBR1IsT0FBTyxFQUFuQjtBQUVBUSxHQUFHLENBQUNDLEdBQUosQ0FBUVAsVUFBVSxDQUFDUSxJQUFYLEVBQVI7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFSLElBQUksRUFBWixFLENBRUE7O0FBQ0FPLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDakNBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCLENBQXFCTixTQUFyQjtBQUNILENBRkQsRSxDQUtBOztBQUNBSSxHQUFHLENBQUNPLElBQUosQ0FBUyxpQkFBVCxFQUE0QixDQUFDSCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN0QyxRQUFNO0FBQUVQLElBQUFBO0FBQUYsTUFBWU0sR0FBRyxDQUFDSSxJQUF0Qjs7QUFDQSxNQUFJVixLQUFKLEVBQVc7QUFDUCxVQUFNVyxRQUFRLEdBQUc7QUFDYlosTUFBQUEsRUFBRSxFQUFFRixJQUFJLEVBREs7QUFFYkksTUFBQUEsV0FBVyxFQUFFLEtBRkE7QUFHYkQsTUFBQUE7QUFIYSxLQUFqQjtBQUtBRixJQUFBQSxTQUFTLENBQUNjLElBQVYsQ0FBZUQsUUFBZjtBQUNBSixJQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCSixJQUFoQixDQUFxQk8sUUFBckI7QUFDSCxHQVJELE1BUU87QUFDSEosSUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQkosSUFBaEIsQ0FBcUI7QUFBRVMsTUFBQUEsT0FBTyxFQUFFO0FBQVgsS0FBckI7QUFDSDtBQUNKLENBYkQ7QUFpQkFYLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLElBQVgsRUFBaUIsTUFBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksK0JBQVosQ0FBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RhbmUvRG9jdW1lbnRzL3Byb2plY3RzL3JlYWN0LzIwNDgtc2VydmVyL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHV1aWQgZnJvbSAndXVpZCc7XG5cbnZhciBoaWdoU2NvcmUgPSBbe1xuICAgIGlkOiAnYWUwNjE4MWQtOTJjMi00ZmVkLWEyOWQtZmI1M2E2MzAxZWI5JyxcbiAgICBzY29yZTogJzE1JyxcbiAgICBpc0hpZ2hTY29yZTogZmFsc2UsXG59XG5dO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShjb3JzKCkpO1xuXG4vLyBUaGUgcm91dGUgZm9yIGdldHRpbmcgYSBsaXN0IG9mIGFsbCB0b2Rvc1xuYXBwLmdldCgnL2hpZ2gtc2NvcmUnLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihoaWdoU2NvcmUpO1xufSk7XG5cblxuLy8gVGhlIHJvdXRlIGZvciBjcmVhdGluZyBuZXcgdG9kby1saXN0IGl0ZW1zXG5hcHAucG9zdCgnL25ldy1oaWdoLXNjb3JlJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBzY29yZSB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKHNjb3JlKSB7XG4gICAgICAgIGNvbnN0IG5ld1Njb3JlID0ge1xuICAgICAgICAgICAgaWQ6IHV1aWQoKSxcbiAgICAgICAgICAgIGlzSGlnaFNjb3JlOiBmYWxzZSxcbiAgICAgICAgICAgIHNjb3JlLFxuICAgICAgICB9XG4gICAgICAgIGhpZ2hTY29yZS5wdXNoKG5ld1Njb3JlKTtcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24obmV3U2NvcmUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ1JlcXVlc3QgYm9keSBzaG91bGQgaGF2ZSBhIHRleHQgcHJvcGVydHksIGFuZCBhIG5hbWUgcHJvcGVydHknIH0pO1xuICAgIH1cbn0pO1xuXG5cblxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcIlNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCA4MDAwXCIpKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "cors",
        "bodyParser",
        "uuid",
        "highScore",
        "id",
        "score",
        "isHighScore",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "status",
        "post",
        "body",
        "newScore",
        "push",
        "message",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,IAAIC,SAAS,GAAG,CAAC;AACbC,EAAAA,EAAE,EAAE,sCADS;AAEbC,EAAAA,KAAK,EAAE,IAFM;AAGbC,EAAAA,WAAW,EAAE;AAHA,CAAD,CAAhB;AAOA,MAAMC,GAAG,GAAGR,OAAO,EAAnB;AAEAQ,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACQ,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQR,IAAI,EAAZ,E,CAEA;;AACAO,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBN,SAArB;AACH,CAFD,E,CAKA;;AACAI,GAAG,CAACO,IAAJ,CAAS,iBAAT,EAA4B,CAACH,GAAD,EAAMC,GAAN,KAAc;AACtC,QAAM;AAAEP,IAAAA;AAAF,MAAYM,GAAG,CAACI,IAAtB;;AACA,MAAIV,KAAJ,EAAW;AACP,UAAMW,QAAQ,GAAG;AACbZ,MAAAA,EAAE,EAAEF,IAAI,EADK;AAEbI,MAAAA,WAAW,EAAE,KAFA;AAGbD,MAAAA;AAHa,KAAjB;AAKAF,IAAAA,SAAS,CAACc,IAAV,CAAeD,QAAf;AACAJ,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBO,QAArB;AACH,GARD,MAQO;AACHJ,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAES,MAAAA,OAAO,EAAE;AAAX,KAArB;AACH;AACJ,CAbD;AAiBAX,GAAG,CAACY,MAAJ,CAAW,IAAX,EAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAvB",
      "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport uuid from 'uuid';\n\nvar highScore = [{\n    id: 'ae06181d-92c2-4fed-a29d-fb53a6301eb9',\n    score: '15',\n    isHighScore: false,\n}\n];\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(cors());\n\n// The route for getting a list of all todos\napp.get('/high-score', (req, res) => {\n    res.status(200).json(highScore);\n});\n\n\n// The route for creating new todo-list items\napp.post('/new-high-score', (req, res) => {\n    const { score } = req.body;\n    if (score) {\n        const newScore = {\n            id: uuid(),\n            isHighScore: false,\n            score,\n        }\n        highScore.push(newScore);\n        res.status(200).json(newScore);\n    } else {\n        res.status(400).json({ message: 'Request body should have a text property, and a name property' });\n    }\n});\n\n\n\napp.listen(8000, () => console.log(\"Server listening on port 8000\"));\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1618583315925
  },
  "{\"sourceRoot\":\"/Users/dane/Documents/projects/react/2048-server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/dane/Documents/projects/react/2048-server\",\"filename\":\"/Users/dane/Documents/projects/react/2048-server/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/dane/Documents/projects/react/2048-server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/dane/Documents/projects/react/2048-server",
      "filename": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/dane/Documents/projects/react/2048-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/dane/Documents/projects/react/2048-server/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar fs = require('fs');\n\nvar data = fs.readFileSync('./config.json'),\n    highScore;\n\ntry {\n  highScore = JSON.parse(data);\n  console.dir(highScore);\n} catch (err) {\n  console.log('There has been an error parsing your JSON.');\n  console.log(err);\n}\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _cors[\"default\"])()); // The route for getting a list of all todos\n\napp.get('/high-score', function (req, res) {\n  res.status(200).json(highScore);\n}); // The route for creating new todo-list items\n\napp.post('/new-high-score', function (req, res) {\n  console.log(req);\n  console.log(req.query);\n  var score = req.query.score;\n  console.log(score);\n\n  if (score) {\n    var newScore = [{\n      id: (0, _uuid[\"default\"])(),\n      score: parseInt(score)\n    }];\n    highScore = newScore;\n    var newHighScore = JSON.stringify(highScore);\n    fs.writeFile('./config.json', newHighScore, function (err) {\n      if (err) {\n        console.log('There has been an error saving your configuration data.');\n        console.log(err.message);\n        return;\n      }\n\n      console.log('Configuration saved successfully.');\n    });\n    res.status(200).json(newScore);\n  } else {\n    res.status(400).json({\n      message: 'Request params should be formatted {score: number}'\n    });\n  }\n});\napp.listen(8000, function () {\n  return console.log(\"Server listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwiaGlnaFNjb3JlIiwiSlNPTiIsInBhcnNlIiwiY29uc29sZSIsImRpciIsImVyciIsImxvZyIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwicG9zdCIsInF1ZXJ5Iiwic2NvcmUiLCJuZXdTY29yZSIsImlkIiwicGFyc2VJbnQiLCJuZXdIaWdoU2NvcmUiLCJzdHJpbmdpZnkiLCJ3cml0ZUZpbGUiLCJtZXNzYWdlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFDQSxJQUFJQyxJQUFJLEdBQUdGLEVBQUUsQ0FBQ0csWUFBSCxDQUFnQixlQUFoQixDQUFYO0FBQUEsSUFDSUMsU0FESjs7QUFHQSxJQUFJO0FBQ0FBLEVBQUFBLFNBQVMsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdKLElBQVgsQ0FBWjtBQUNBSyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosU0FBWjtBQUNILENBSEQsQ0FHRSxPQUFPSyxHQUFQLEVBQVk7QUFDVkYsRUFBQUEsT0FBTyxDQUFDRyxHQUFSLENBQVksNENBQVo7QUFDQUgsRUFBQUEsT0FBTyxDQUFDRyxHQUFSLENBQVlELEdBQVo7QUFDSDs7QUFHRCxJQUFNRSxHQUFHLEdBQUcsMEJBQVo7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVIsRSxDQUVBOztBQUNBRCxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXVCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCSixJQUFoQixDQUFxQlYsU0FBckI7QUFDSCxDQUZELEUsQ0FLQTs7QUFDQU8sR0FBRyxDQUFDUSxJQUFKLENBQVMsaUJBQVQsRUFBNEIsVUFBQ0gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDdENWLEVBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZTSxHQUFaO0FBQ0FULEVBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZTSxHQUFHLENBQUNJLEtBQWhCO0FBRnNDLE1BSWxDQyxLQUprQyxHQUtsQ0wsR0FBRyxDQUFDSSxLQUw4QixDQUlsQ0MsS0FKa0M7QUFNdENkLEVBQUFBLE9BQU8sQ0FBQ0csR0FBUixDQUFZVyxLQUFaOztBQUNBLE1BQUlBLEtBQUosRUFBVztBQUNQLFFBQU1DLFFBQVEsR0FBRyxDQUFDO0FBQ2RDLE1BQUFBLEVBQUUsRUFBRSx1QkFEVTtBQUVkRixNQUFBQSxLQUFLLEVBQUVHLFFBQVEsQ0FBQ0gsS0FBRDtBQUZELEtBQUQsQ0FBakI7QUFJQWpCLElBQUFBLFNBQVMsR0FBR2tCLFFBQVo7QUFDQSxRQUFJRyxZQUFZLEdBQUdwQixJQUFJLENBQUNxQixTQUFMLENBQWV0QixTQUFmLENBQW5CO0FBQ0FKLElBQUFBLEVBQUUsQ0FBQzJCLFNBQUgsQ0FBYSxlQUFiLEVBQThCRixZQUE5QixFQUE0QyxVQUFVaEIsR0FBVixFQUFlO0FBQ3ZELFVBQUlBLEdBQUosRUFBUztBQUNMRixRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWSx5REFBWjtBQUNBSCxRQUFBQSxPQUFPLENBQUNHLEdBQVIsQ0FBWUQsR0FBRyxDQUFDbUIsT0FBaEI7QUFDQTtBQUNIOztBQUNEckIsTUFBQUEsT0FBTyxDQUFDRyxHQUFSLENBQVksbUNBQVo7QUFDSCxLQVBEO0FBUUFPLElBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCLENBQXFCUSxRQUFyQjtBQUNILEdBaEJELE1BZ0JPO0FBQ0hMLElBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCLENBQXFCO0FBQ2pCYyxNQUFBQSxPQUFPLEVBQUU7QUFEUSxLQUFyQjtBQUdIO0FBQ0osQ0E1QkQ7QUFnQ0FqQixHQUFHLENBQUNrQixNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU10QixPQUFPLENBQUNHLEdBQVIsQ0FBWSwrQkFBWixDQUFOO0FBQUEsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RhbmUvRG9jdW1lbnRzL3Byb2plY3RzL3JlYWN0LzIwNDgtc2VydmVyL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHV1aWQgZnJvbSAndXVpZCc7XG5cbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgZGF0YSA9IGZzLnJlYWRGaWxlU3luYygnLi9jb25maWcuanNvbicpLFxuICAgIGhpZ2hTY29yZTtcblxudHJ5IHtcbiAgICBoaWdoU2NvcmUgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgIGNvbnNvbGUuZGlyKGhpZ2hTY29yZSk7XG59IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmxvZygnVGhlcmUgaGFzIGJlZW4gYW4gZXJyb3IgcGFyc2luZyB5b3VyIEpTT04uJylcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xufVxuXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5cbi8vIFRoZSByb3V0ZSBmb3IgZ2V0dGluZyBhIGxpc3Qgb2YgYWxsIHRvZG9zXG5hcHAuZ2V0KCcvaGlnaC1zY29yZScsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGhpZ2hTY29yZSk7XG59KTtcblxuXG4vLyBUaGUgcm91dGUgZm9yIGNyZWF0aW5nIG5ldyB0b2RvLWxpc3QgaXRlbXNcbmFwcC5wb3N0KCcvbmV3LWhpZ2gtc2NvcmUnLCAocmVxLCByZXMpID0+IHtcbiAgICBjb25zb2xlLmxvZyhyZXEpO1xuICAgIGNvbnNvbGUubG9nKHJlcS5xdWVyeSk7XG4gICAgY29uc3Qge1xuICAgICAgICBzY29yZVxuICAgIH0gPSByZXEucXVlcnk7XG4gICAgY29uc29sZS5sb2coc2NvcmUpO1xuICAgIGlmIChzY29yZSkge1xuICAgICAgICBjb25zdCBuZXdTY29yZSA9IFt7XG4gICAgICAgICAgICBpZDogdXVpZCgpLFxuICAgICAgICAgICAgc2NvcmU6IHBhcnNlSW50KHNjb3JlKSxcbiAgICAgICAgfV1cbiAgICAgICAgaGlnaFNjb3JlID0gbmV3U2NvcmU7XG4gICAgICAgIHZhciBuZXdIaWdoU2NvcmUgPSBKU09OLnN0cmluZ2lmeShoaWdoU2NvcmUpO1xuICAgICAgICBmcy53cml0ZUZpbGUoJy4vY29uZmlnLmpzb24nLCBuZXdIaWdoU2NvcmUsIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVGhlcmUgaGFzIGJlZW4gYW4gZXJyb3Igc2F2aW5nIHlvdXIgY29uZmlndXJhdGlvbiBkYXRhLicpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ29uZmlndXJhdGlvbiBzYXZlZCBzdWNjZXNzZnVsbHkuJylcbiAgICAgICAgfSk7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKG5ld1Njb3JlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiAnUmVxdWVzdCBwYXJhbXMgc2hvdWxkIGJlIGZvcm1hdHRlZCB7c2NvcmU6IG51bWJlcn0nXG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuXG5cblxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcIlNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCA4MDAwXCIpKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "fs",
        "require",
        "data",
        "readFileSync",
        "highScore",
        "JSON",
        "parse",
        "console",
        "dir",
        "err",
        "log",
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "status",
        "post",
        "query",
        "score",
        "newScore",
        "id",
        "parseInt",
        "newHighScore",
        "stringify",
        "writeFile",
        "message",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,IAAI,GAAGF,EAAE,CAACG,YAAH,CAAgB,eAAhB,CAAX;AAAA,IACIC,SADJ;;AAGA,IAAI;AACAA,EAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACH,CAHD,CAGE,OAAOK,GAAP,EAAY;AACVF,EAAAA,OAAO,CAACG,GAAR,CAAY,4CAAZ;AACAH,EAAAA,OAAO,CAACG,GAAR,CAAYD,GAAZ;AACH;;AAGD,IAAME,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAEA;;AACAD,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBV,SAArB;AACH,CAFD,E,CAKA;;AACAO,GAAG,CAACQ,IAAJ,CAAS,iBAAT,EAA4B,UAACH,GAAD,EAAMC,GAAN,EAAc;AACtCV,EAAAA,OAAO,CAACG,GAAR,CAAYM,GAAZ;AACAT,EAAAA,OAAO,CAACG,GAAR,CAAYM,GAAG,CAACI,KAAhB;AAFsC,MAIlCC,KAJkC,GAKlCL,GAAG,CAACI,KAL8B,CAIlCC,KAJkC;AAMtCd,EAAAA,OAAO,CAACG,GAAR,CAAYW,KAAZ;;AACA,MAAIA,KAAJ,EAAW;AACP,QAAMC,QAAQ,GAAG,CAAC;AACdC,MAAAA,EAAE,EAAE,uBADU;AAEdF,MAAAA,KAAK,EAAEG,QAAQ,CAACH,KAAD;AAFD,KAAD,CAAjB;AAIAjB,IAAAA,SAAS,GAAGkB,QAAZ;AACA,QAAIG,YAAY,GAAGpB,IAAI,CAACqB,SAAL,CAAetB,SAAf,CAAnB;AACAJ,IAAAA,EAAE,CAAC2B,SAAH,CAAa,eAAb,EAA8BF,YAA9B,EAA4C,UAAUhB,GAAV,EAAe;AACvD,UAAIA,GAAJ,EAAS;AACLF,QAAAA,OAAO,CAACG,GAAR,CAAY,yDAAZ;AACAH,QAAAA,OAAO,CAACG,GAAR,CAAYD,GAAG,CAACmB,OAAhB;AACA;AACH;;AACDrB,MAAAA,OAAO,CAACG,GAAR,CAAY,mCAAZ;AACH,KAPD;AAQAO,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBQ,QAArB;AACH,GAhBD,MAgBO;AACHL,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AACjBc,MAAAA,OAAO,EAAE;AADQ,KAArB;AAGH;AACJ,CA5BD;AAgCAjB,GAAG,CAACkB,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMtB,OAAO,CAACG,GAAR,CAAY,+BAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "/Users/dane/Documents/projects/react/2048-server/src/",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport uuid from 'uuid';\n\nvar fs = require('fs');\nvar data = fs.readFileSync('./config.json'),\n    highScore;\n\ntry {\n    highScore = JSON.parse(data);\n    console.dir(highScore);\n} catch (err) {\n    console.log('There has been an error parsing your JSON.')\n    console.log(err);\n}\n\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(cors());\n\n// The route for getting a list of all todos\napp.get('/high-score', (req, res) => {\n    res.status(200).json(highScore);\n});\n\n\n// The route for creating new todo-list items\napp.post('/new-high-score', (req, res) => {\n    console.log(req);\n    console.log(req.query);\n    const {\n        score\n    } = req.query;\n    console.log(score);\n    if (score) {\n        const newScore = [{\n            id: uuid(),\n            score: parseInt(score),\n        }]\n        highScore = newScore;\n        var newHighScore = JSON.stringify(highScore);\n        fs.writeFile('./config.json', newHighScore, function (err) {\n            if (err) {\n                console.log('There has been an error saving your configuration data.');\n                console.log(err.message);\n                return;\n            }\n            console.log('Configuration saved successfully.')\n        });\n        res.status(200).json(newScore);\n    } else {\n        res.status(400).json({\n            message: 'Request params should be formatted {score: number}'\n        });\n    }\n});\n\n\n\napp.listen(8000, () => console.log(\"Server listening on port 8000\"));"
      ]
    },
    "sourceType": "script",
    "mtime": 1618608871169
  }
}